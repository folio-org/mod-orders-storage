{
  "scripts": [
    {
      "run": "after",
      "snippet": "CREATE OR REPLACE VIEW receiving_history_view AS SELECT pieces.id AS id, json_build_object('id', pieces.jsonb->>'id', 'caption', pieces.jsonb->>'caption', 'comment', pieces.jsonb->>'comment', 'dateOrdered', purchase_order.jsonb->>'dateOrdered', 'checkin', po_line.jsonb->>'checkinItems', 'instanceId', po_line.jsonb->>'instanceId','itemId', pieces.jsonb->>'itemId', 'locationId', pieces.jsonb->>'locationId', 'pieceFormat', pieces.jsonb->>'format', 'poLineId', pieces.jsonb->>'poLineId', 'poLineNumber', po_line.jsonb->>'poLineNumber', 'purchaseOrderId', po_line.jsonb->>'purchaseOrderId', 'poLineReceiptStatus', po_line.jsonb->>'receiptStatus','receivedDate', pieces.jsonb->>'receivedDate', 'title', po_line.jsonb->>'title','receivingNote', po_line.jsonb->'details'->>'receivingNote', 'receivingStatus', pieces.jsonb->>'receivingStatus', 'supplement', pieces.jsonb->>'supplement') AS jsonb, json_build_object('id', pieces.jsonb->>'id', 'caption', pieces.jsonb->>'caption', 'comment', pieces.jsonb->>'comment', 'acqUnitIds', purchase_order.jsonb->>'acqUnitIds', 'dateOrdered', purchase_order.jsonb->>'dateOrdered', 'checkin', po_line.jsonb->>'checkinItems', 'instanceId', po_line.jsonb->>'instanceId','itemId', pieces.jsonb->>'itemId', 'locationId', pieces.jsonb->>'locationId', 'pieceFormat', pieces.jsonb->>'format', 'poLineId', pieces.jsonb->>'poLineId', 'poLineNumber', po_line.jsonb->>'poLineNumber', 'purchaseOrderId', po_line.jsonb->>'purchaseOrderId', 'poLineReceiptStatus', po_line.jsonb->>'receiptStatus','receivedDate', pieces.jsonb->>'receivedDate', 'title', po_line.jsonb->>'title','receivingNote', po_line.jsonb->'details'->>'receivingNote', 'receivingStatus', pieces.jsonb->>'receivingStatus', 'supplement', pieces.jsonb->>'supplement')::jsonb AS metadata FROM pieces LEFT OUTER JOIN po_line ON pieces.jsonb->>'poLineId' = po_line.jsonb->>'id' LEFT OUTER JOIN purchase_order ON po_line.jsonb->>'purchaseOrderId' = purchase_order.jsonb->>'id';",
      "fromModuleVersion": "7.0"
    },
    {
      "run": "after",
      "snippet": "CREATE OR REPLACE VIEW orders_view AS SELECT purchase_order.id AS id, purchase_order.jsonb AS jsonb, (COALESCE(po_line.jsonb, '{}'::jsonb) - 'tags') || purchase_order.jsonb AS metadata FROM purchase_order LEFT JOIN po_line ON (po_line.jsonb -> 'purchaseOrderId'::text) = (purchase_order.jsonb -> 'id'::text);",
      "fromModuleVersion": "7.0"
    },
    {
      "run": "after",
      "snippet": "CREATE OR REPLACE VIEW order_lines_view AS SELECT po_line.id AS id, po_line.jsonb AS jsonb, (COALESCE(purchase_order.jsonb, '{}'::jsonb) - 'tags') || po_line.jsonb AS metadata FROM po_line LEFT JOIN purchase_order ON (po_line.jsonb -> 'purchaseOrderId'::text) = (purchase_order.jsonb -> 'id'::text);",
      "fromModuleVersion": "7.0"
    },
    {
      "run": "after",
      "snippet": "DROP VIEW IF EXISTS purchase_orders_view;",
      "fromModuleVersion": "7.0"
    },
    {
      "run": "after",
      "snippet": "CREATE OR REPLACE VIEW po_lines_view AS SELECT po_line.id AS id, po_line.jsonb AS jsonb, jsonb_build_object('acqUnitIds', purchase_order.jsonb->'acqUnitIds') || po_line.jsonb AS metadata FROM po_line LEFT JOIN purchase_order ON (po_line.jsonb -> 'purchaseOrderId'::text) = (purchase_order.jsonb -> 'id'::text);",
      "fromModuleVersion": "7.0"
    }
  ],
  "tables": [
    {
      "tableName": "alert",
      "fromModuleVersion": 7.0,
      "withMetadata": true
    },
    {
      "tableName": "reporting_code",
      "fromModuleVersion": 7.0,
      "withMetadata": true
    },
    {
      "tableName": "purchase_order",
      "fromModuleVersion": 7.0,
      "withMetadata": true,
      "customSnippetPath": "purchase_order_table.sql",
      "index": [
        {
          "fieldName": "acqUnitIds",
          "caseSensitive": false
        },
        {
          "fieldName": "assignedTo",
          "caseSensitive": false
        },
        {
          "fieldName": "metadata.createdDate",
          "caseSensitive": false
        },
        {
          "fieldName": "metadata.createdByUserId",
          "caseSensitive": false
        },
        {
          "fieldName": "workflowStatus",
          "caseSensitive": false
        },
        {
          "fieldName": "approved",
          "caseSensitive": false
        },
        {
          "fieldName": "dateOrdered",
          "caseSensitive": false
        },
        {
          "fieldName": "orderType",
          "caseSensitive": false
        },
        {
          "fieldName": "reEncumber",
          "caseSensitive": false
        },
        {
          "fieldName": "renewal.manualRenewal",
          "caseSensitive": false
        },
        {
          "fieldName": "renewal.renewalDate",
          "caseSensitive": false
        },
        {
          "fieldName": "renewal.reviewPeriod",
          "caseSensitive": false
        }
      ],
      "fullTextIndex": [
        {
          "fieldName": "closeReason.reason"
        },
        {
          "fieldName": "closeReason.note"
        }
      ]
    },
    {
      "tableName": "po_line",
      "fromModuleVersion": 7.0,
      "withMetadata": true,
      "foreignKeys": [
        {
          "fieldName": "purchaseOrderId",
          "targetTable": "purchase_order"
        }
      ],
      "index": [
        {
          "fieldName": "eresource.accessProvider",
          "caseSensitive": false
        },
        {
          "fieldName": "eresource.activated",
          "caseSensitive": false
        },
        {
          "fieldName": "eresource.expectedActivation",
          "caseSensitive": false
        },
        {
          "fieldName": "eresource.trial",
          "caseSensitive": false
        },
        {
          "fieldName": "eresource.materialType",
          "caseSensitive": false
        },
        {
          "fieldName": "details.subscriptionFrom",
          "caseSensitive": false
        },
        {
          "fieldName": "details.subscriptionTo",
          "caseSensitive": false
        },
        {
          "fieldName": "location.locationId",
          "caseSensitive": false
        },
        {
          "fieldName": "physical.receiptDue",
          "caseSensitive": false
        },
        {
          "fieldName": "physical.expectedReceiptDate",
          "caseSensitive": false
        },
        {
          "fieldName": "physical.volumes",
          "caseSensitive": false
        },
        {
          "fieldName": "physical.materialType",
          "caseSensitive": false
        },
        {
          "fieldName": "claim.grace",
          "caseSensitive": false
        },
        {
          "fieldName": "claim.sent",
          "caseSensitive": false
        },
        {
          "fieldName": "collection",
          "caseSensitive": false
        },
        {
          "fieldName": "receiptStatus",
          "caseSensitive": false
        },
        {
          "fieldName": "paymentStatus",
          "caseSensitive": false
        },
        {
          "fieldName": "orderFormat",
          "caseSensitive": false
        },
        {
          "fieldName": "receiptDate",
          "caseSensitive": false
        },
        {
          "fieldName": "metadata.createdDate",
          "caseSensitive": false
        },
        {
          "fieldName": "rush",
          "caseSensitive": false
        },
        {
          "fieldName": "source",
          "caseSensitive": false
        }
      ],
      "fullTextIndex": [
        {
          "fieldName": "publisher"
        },
        {
          "fieldName": "donor"
        },
        {
          "fieldName": "selector"
        }
      ],
      "ginIndex": [
        {
          "fieldName": "fundDistribution.code",
          "caseSensitive": false,
          "removeAccents": true
        },
        {
          "fieldName": "details.productIds",
          "caseSensitive": false,
          "removeAccents": true
        },
        {
          "fieldName": "title",
          "caseSensitive": false,
          "removeAccents": true
        },
        {
          "fieldName": "vendor.vendorAccount",
          "caseSensitive": false,
          "removeAccents": true
        },
        {
          "fieldName": "vendor.refNumber",
          "caseSensitive": false,
          "removeAccents": true
        },
        {
          "fieldName": "tags",
          "caseSensitive": false,
          "removeAccents": true
        },
        {
          "fieldName": "contributors",
          "caseSensitive": false,
          "removeAccents": true
        },
        {
          "fieldName": "requester",
          "caseSensitive": false,
          "removeAccents": true
        },
        {
          "fieldName": "poLineNumber",
          "caseSensitive": false,
          "removeAccents": true
        }
      ]
    },
    {
      "tableName": "pieces",
      "fromModuleVersion": 7.0,
      "withMetadata": true,
      "foreignKeys": [
        {
          "fieldName": "poLineId",
          "targetTable": "po_line"
        }
      ],
      "index": [
        {
          "fieldName": "format",
          "caseSensitive": false
        },
        {
          "fieldName": "itemId",
          "caseSensitive": false
        },
        {
          "fieldName": "locationId",
          "caseSensitive": false
        },
        {
          "fieldName": "poLineId",
          "caseSensitive": false
        },
        {
          "fieldName": "receivingStatus",
          "caseSensitive": false
        },
        {
          "fieldName": "receivedDate",
          "caseSensitive": false
        },
        {
          "fieldName": "supplement",
          "caseSensitive": false
        }
      ],
      "fullTextIndex": [
        {
          "fieldName": "comment"
        }
      ],
      "ginIndex": [
        {
          "fieldName": "caption",
          "caseSensitive": false,
          "removeAccents": true
        }
      ]
    },
    {
      "tableName": "order_invoice_relationship",
      "fromModuleVersion": 7.0,
      "withMetadata": false,
      "foreignKeys": [
        {
          "fieldName": "purchaseOrderId",
          "targetTable": "purchase_order"
        }
      ]
    },
    {
      "tableName": "acquisitions_unit",
      "fromModuleVersion": 7.0,
      "withMetadata": true,
      "uniqueIndex": [
        {
            "fieldName" : "name"
        }
      ]
    },
    {
      "tableName": "acquisitions_unit_assignments",
      "fromModuleVersion": 7.0,
      "mode": "delete"
    },
    {
    "tableName": "acquisitions_unit_membership",
      "fromModuleVersion": 7.0,
      "withMetadata": true,
      "foreignKeys": [
        {
          "fieldName": "acquisitionsUnitId",
          "targetTable": "acquisitions_unit"
        }
      ],
      "index": [
         {
            "fieldName" : "userId"
         },
         {
            "fieldName" : "acquisitionsUnitId"
         }
       ]
     },
     {
      "tableName": "order_templates",
      "fromModuleVersion": 8.0,
      "withMetadata": false,
      "uniqueIndex": [
         {
           "fieldName" : "templateName"
         }
       ]
     }
  ]
}
